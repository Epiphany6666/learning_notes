<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.DynamicSQLMapper">


    <!--int insertMoreByList(List<Emp> emps);-->
    <insert id="insertMoreByList">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            <!--
            PS：这里不能使用open和close！
            这里的()代表每一个循环都会有一个()
            而open和close表示的是循环体外面加()
            -->
            (null, #{emp.empName}, #{emp.age}, #{emp.sex}, #{emp.email}, null)
        </foreach>
    </insert>

    <!--int deleteMoreByArrays(@Param("eids") Integer[] eids);-->
    <delete id="deleteMoreByArrays">
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or">
            eid = #{eid}
        </foreach>

        <!--
        collection：我们当前要循环的数组或集合
        item：我们数组当前的每个元素，这里取名为eid
        separator：分隔符
        open：以...开始
        close：以...结束
        -->
        delete from t_emp where eid in
        <foreach collection="eids" item="eid" separator="," open="(" close=")">
            #{eid}
        </foreach>

    </delete>


    <!--List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <where>
            <choose>
                <!--注意，不管是从第二条开始还是第几条不需要加and或or！因为choose只会执行一条！-->
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age} and
                </when>
                <when test="sex != null and sex != ''">
                    sex = #{sex} and
                </when>
                <when test="email != null and email != ''">
                    email = #{email}
                </when>
                <!--如果上面条件后不满足则查询did为1的员工-->
                <otherwise>
                    did = 1
                </otherwise>
            </choose>
        </where>
    </select>
    <sql id="empColums">eid, emp_name, age, sex, email</sql>

    <!--List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColums"></include> from t_emp
        <!--
        prifix | suffix：将trim标签中内容前面或后面添加指定内容
        suffixOverriddes | prefixOverrides：将trim标签中内容或后面去掉指定内容
        如果需要写多个内容的话，直接写一个|即可
        -->

        <trim prefix="where" suffixOverrides="and|or">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
               age = #{age} and
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex} and
            </if>
            <if test="email != null and email != ''">
                email = #{email}
            </if>
        </trim>
    </select>

    <select id="getEmpByConditionTwo" resultType="Emp">
        <!--
        此时就需要在这里设置判断条件，因为如果是没有提供的条件这里是不能接上的
        如果符合条件的话，当前的内容就会拼接到SQL中
        注意，从第二个条件开始就需要写and
        -->

        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </where>
    </select>

</mapper>