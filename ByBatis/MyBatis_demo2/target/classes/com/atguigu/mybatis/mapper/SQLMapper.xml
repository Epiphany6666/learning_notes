<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.SQLMapper">
    <!--
    List<User> getUserByLike(@Param("username") String username);

    由于我们使用的是模糊查询，%#{username}%需要写在一对单引号中，单引号在mysql中表示的是一个字符串
    当我们用#{}时，并且在执行时，?会代替#{}的时候，?就存在了#{}里面，这个时候就会把?当做字符串的一部分
    -->
    <select id="getUserByLike" resultType="User">
        <!--第一种解决方案：将#改为$-->
        <!--select * from t_user where username like '%${username}%'-->

        <!--第二种方案：mysql里有个comcat函数->字符串拼接
        #{}是会自动加单引号的！

        select * from t_user where username like concat('%', #{username}, '%')-->

        <!--第三种解决方案：也是以后用的最多的方案-->
        select * from t_user where username like "%"#{username}"%"
    </select>

    <!--int deleteMore(@Param("ids") String ids);-->
    <delete id="deleteMore">
        delete from t_user where id in (${ids})
    </delete>
    <!--List<User> getUserByTableName(@Param("tableName") String tableName);-->
    <select id="getUserByTableName" resultType="user">
        <!--在MySql里，表名是不能加单引号的！字符串类型的数据、日期类型的数据、字段都是可以加单引号的-->
        select * from ${tableName}
    </select>

    <!--void insertUser(User user);-->
    <!--如果需要获取自动递增的主键，可以使用useGeneratedKeys属性，设置为true，来表示标签中的这个sql它使用了自动自增的主键

        再往下还需要设置一个属性：keyProperty
        获取自动自增的主键是不能通过方法的返回值返回的，因为增删改的返回值是固定的，就是受影响的行数。
        既然它不能作为方法的返回值，就只能放在我们所传输过来的参数的某个属性中。
        而keyProperty就是起这个作用的
        -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        <!--获取实体类对象中指定属性的值，只需要通过#{}、${}通过属性名就可以来获取属性值-->
        insert into t_user values(null, #{username}, #{password}, #{age}, #{sex}, #{email})
    </insert>
</mapper>