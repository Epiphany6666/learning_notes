<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <context:component-scan base-package="com.atguigu.mvc.controller"></context:component-scan>

    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <!-- order：来设置当前视图解析器的优先级
        从这个属性上来看，就知道我们的视图解析器是可以配置多个的。
        -->
        <property name="order" value="1"/>
        <!--        解析视图所用的编码-->
        <property name="characterEncoding" value="UTF-8"/>
        <!--        当前的一个模板-->
        <property name="templateEngine">
            <!--   注意看！这里是内部bean，为templateEngine整个属性赋值
            整个内部bean就是我们当前来解析当前视图层的一个策略
            -->
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀
                        Thymeleaf在设置视图解析时，必须要设置视图前缀和试图后缀
                        然后把我们当前的视图名称来加上前缀和后缀，最终就可以跳转到我们所指定的页面
                        -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <!--                        templateMode：我们所使用的模板的一个模型，我们所使用的是html5-->
                        <property name="templateMode" value="HTML5"/>
                        <!--                        characterEncoding：当前页面中的一个编码，这里用的是UTF-8-->
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>