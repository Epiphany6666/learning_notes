<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--PS：在servlet之前初始化，可不是因为写在servlet之前。而是因为在tomcat里面，它最早初始化的就是监听器，再往下就是Filter，再往下就是servlet
    也就是说，就算写在servlet之后，它也是优先于servlet初始化的。-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
<!--        是web模块过滤器提供的！-->
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>

        <!--        设置encoding-->
        <init-param>
            <!-- 这里的param-name名需要跟我们刚才的成员变量的名字保持一致
            我们在这里设置的成员编码，就是赋给当前成员变量encoding的值。
            -->
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>

<!--        这里注意，每设置一个属性，都需要一个init-param标签-->
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <!--这里设置我们需要对哪些请求进行处理。
        应该是所有请求！因为所有请求都有可能是post发送的！所以这里要写/*
        但是我们这样写也是没有效果的！-->
        <url-pattern>/*</url-pattern>
<!--        写完上面的也是没有作用的，因为此时并没有设置具体的编码，它并不知道我们要使用UTF-8，能处理中文的就两种：UTF-8、GBK-->
    </filter-mapping>

    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>